import random
from dungeon.room_events import ROOM_EVENTS
from buffs.models import BuffDebuff

def process_room_event(character, event_type):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (—Ç–µ–∫—Å—Ç_–∞—Ç–º–æ—Å—Ñ–µ—Ä—ã, —Å–∏—Å—Ç–µ–º–Ω—ã–π_—Ä–µ–∑—É–ª—å—Ç–∞—Ç)"""
    
    if event_type == "Trap":
        text = random.choice(ROOM_EVENTS["Trap"])
        damage = random.randint(5, 15)
        character.hp = max(0, character.hp - damage)
        character.save()
        return text, f"ü©∏ –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ {damage} HP –∏–∑-–∑–∞ –ª–æ–≤—É—à–∫–∏!"

    elif event_type == "Buff":
        attribute = random.choice(["Health", "Attack", "Defense"])
        buff_name = f"{attribute} Boost"
        buff = BuffDebuff.objects.get(name=buff_name)
        text = random.choice(ROOM_EVENTS["Buff"][attribute])
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ ‚Äì –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –≤ battle.effects
        return text, f"üõ°Ô∏è –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–∞—Ñ—Ñ: {buff.name} (+{int((buff.value - 1) * 100)}%) –Ω–∞ {buff.duration} —Ö–æ–¥–æ–≤."

    elif event_type == "Debuff":
        attribute = random.choice(["Health", "Attack", "Defense"])
        debuff_name = f"{attribute} Curse"
        debuff = BuffDebuff.objects.get(name=debuff_name)
        text = random.choice(ROOM_EVENTS["Debuff"][attribute])
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ ‚Äî –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ active_effect
        return text, f"‚ò†Ô∏è –í–∞—Å –ø–æ—Ä–∞–∑–∏–ª –¥–µ–±–∞—Ñ—Ñ: {debuff.name} (‚Äì{int((1 - debuff.value) * 100)}%) –Ω–∞ {debuff.duration} —Ö–æ–¥–æ–≤."
